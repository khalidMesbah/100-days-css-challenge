$numberOfRings: 10; // update together with HTML
$numberOfDots: 12; // update together with HTML
$radius: 40;
.frame {
	position: absolute;
	inset: calc(50% - 200px);
	border-radius: 2px;
	box-shadow: 1px 2px 10px 0px rgba(0, 0, 0, 0.3);
	background: #27ae60;
}
.ring {
	position: absolute;
	padding: $radius + px;
	inset: ((400 - ($radius * 2)) / 2) + px auto auto ((400 - ($radius * 2)) / 2) +
		px;
	.dot {
		position: absolute;
		padding: 4px;
		inset: $radius + px auto auto $radius + px;
		.fill {
			padding: 4px;
			background: #fff;
			border-radius: 50px;
		}
	}
}
@for $i from 1 through $numberOfRings {
	$nullBase: $i - 1;
	$dotsPerCircle: ($numberOfDots + ($i * 6));
	.ring-#{$i} {
		.fill {
			animation: pulsate 2s ease-in-out ($i/3) + s alternate infinite both;
		}
		@for $j from 1 through $dotsPerCircle {
			$nullBaseJ: $j - 1;
			$angle: 360 / $dotsPerCircle;
			.dot-#{$j} {
				$deg: ($nullBaseJ * $angle) + deg;
				transform: translateY((($radius + ($nullBase * 11)) * -1) + px)
					rotate($deg);
				transform-origin: 0 ($radius + ($nullBase * 11)) + px;
			}
		}
	}
}
@keyframes pulsate {
	from {
		transform: scale(0);
	}
}
